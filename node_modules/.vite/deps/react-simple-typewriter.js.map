{
  "version": 3,
  "sources": ["../../react-simple-typewriter/src/index.js"],
  "sourcesContent": ["import React, { useState, useEffect, useCallback, memo, useRef } from 'react'\n\nexport default memo(function Typewriter({\n  loop,\n  typeSpeed,\n  deleteSpeed,\n  delaySpeed,\n  words,\n  cursor,\n  cursorStyle\n}) {\n  // State\n  const [speed, setSpeed] = useState(100)\n  const [text, setText] = useState('')\n  // Refs\n  const isDeleting = useRef(false)\n  const counter = useRef(0)\n\n  const handleTyping = useCallback(() => {\n    const index = loop ? counter.current % words.length : counter.current\n    const word = words[index]\n    setSpeed(typeSpeed || 100)\n\n    if (isDeleting.current) {\n      // Set stoping speed\n      setSpeed(deleteSpeed || 50)\n      // Move backwards\n      setText((prev) => word.substring(0, prev.length - 1))\n      // Move to the next word when text is empty\n      if (text === '') {\n        isDeleting.current = false\n        counter.current = counter.current + 1\n      }\n    } else {\n      // Move Forward\n      setText((prev) => word.substring(0, prev.length + 1))\n      // Word is completed\n      if (text === word) {\n        // if not loop just return\n        if (!loop) return\n        // else set the speed delay and start over\n        setSpeed(delaySpeed || 1500)\n        isDeleting.current = true\n      }\n    }\n  }, [delaySpeed, deleteSpeed, loop, text, typeSpeed, words])\n\n  useEffect(() => {\n    const timer = setTimeout(() => handleTyping(), speed)\n    return () => clearTimeout(timer)\n  }, [handleTyping, speed])\n\n  return (\n    <React.Fragment>\n      <span>{text}</span>\n      {cursor && <span className='blinking-cursor'>{cursorStyle || '|'}</span>}\n    </React.Fragment>\n  )\n})\n"],
  "mappings": ";;;;;;;AAEA,IAAA,YAAeA,mBAAK,SAASC,WAAT,MAQjB;AAAA,MAPDC,OAOC,KAPDA,MACAC,YAMC,KANDA,WACAC,cAKC,KALDA,aACAC,aAIC,KAJDA,YACAC,QAGC,KAHDA,OACAC,SAEC,KAFDA,QACAC,cACC,KADDA;AACC,MAAA,gBAEyBC,uBAAS,GAAD,GAA3BC,QAFN,UAAA,CAAA,GAEaC,WAFb,UAAA,CAAA;AAAA,MAAA,iBAGuBF,uBAAS,EAAD,GAAzBG,OAHN,WAAA,CAAA,GAGYC,UAHZ,WAAA,CAAA;AAKD,MAAMC,iBAAaC,qBAAO,KAAD;AACzB,MAAMC,cAAUD,qBAAO,CAAD;AAEtB,MAAME,mBAAeC,0BAAY,WAAM;AACrC,QAAMC,SAAQjB,OAAOc,QAAQI,UAAUd,MAAMe,SAASL,QAAQI;AAC9D,QAAME,OAAOhB,MAAMa,MAAD;AAClBR,aAASR,aAAa,GAAd;AAER,QAAIW,WAAWM,SAAS;AAEtBT,eAASP,eAAe,EAAhB;AAERS,cAAQ,SAACU,MAAD;AAAA,eAAUD,KAAKE,UAAU,GAAGD,KAAKF,SAAS,CAAhC;MAAV,CAAD;AAEP,UAAIT,SAAS,IAAI;AACfE,mBAAWM,UAAU;AACrBJ,gBAAQI,UAAUJ,QAAQI,UAAU;MACrC;IACF,OAAM;AAELP,cAAQ,SAACU,MAAD;AAAA,eAAUD,KAAKE,UAAU,GAAGD,KAAKF,SAAS,CAAhC;MAAV,CAAD;AAEP,UAAIT,SAASU,MAAM;AAEjB,YAAI,CAACpB,KAAM;AAEXS,iBAASN,cAAc,IAAf;AACRS,mBAAWM,UAAU;MACtB;IACF;EACF,GAAE,CAACf,YAAYD,aAAaF,MAAMU,MAAMT,WAAWG,KAAjD,CA3B6B;AA6BhCmB,8BAAU,WAAM;AACd,QAAMC,QAAQC,WAAW,WAAA;AAAA,aAAMV,aAAY;IAAlB,GAAsBP,KAAvB;AACxB,WAAO,WAAA;AAAA,aAAMkB,aAAaF,KAAD;IAAlB;EACR,GAAE,CAACT,cAAcP,KAAf,CAHM;AAKT,SACE,aAAAmB,QAAA,cAAC,aAAAA,QAAM,UAAP,MACE,aAAAA,QAAA,cAAA,QAAA,MAAOjB,IAAP,GACCL,UAAU,aAAAsB,QAAA,cAAA,QAAA;IAAM,WAAU;EAAhB,GAAmCrB,eAAe,GAAlD,CAFb;AAKH,CAxDkB;;",
  "names": ["memo", "Typewriter", "loop", "typeSpeed", "deleteSpeed", "delaySpeed", "words", "cursor", "cursorStyle", "useState", "speed", "setSpeed", "text", "setText", "isDeleting", "useRef", "counter", "handleTyping", "useCallback", "index", "current", "length", "word", "prev", "substring", "useEffect", "timer", "setTimeout", "clearTimeout", "React"]
}

{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo, useRef } from 'react'\n\nexport default memo(function Typewriter({\n  loop,\n  typeSpeed,\n  deleteSpeed,\n  delaySpeed,\n  words,\n  cursor,\n  cursorStyle\n}) {\n  // State\n  const [speed, setSpeed] = useState(100)\n  const [text, setText] = useState('')\n  // Refs\n  const isDeleting = useRef(false)\n  const counter = useRef(0)\n\n  const handleTyping = useCallback(() => {\n    const index = loop ? counter.current % words.length : counter.current\n    const word = words[index]\n    setSpeed(typeSpeed || 100)\n\n    if (isDeleting.current) {\n      // Set stoping speed\n      setSpeed(deleteSpeed || 50)\n      // Move backwards\n      setText((prev) => word.substring(0, prev.length - 1))\n      // Move to the next word when text is empty\n      if (text === '') {\n        isDeleting.current = false\n        counter.current = counter.current + 1\n      }\n    } else {\n      // Move Forward\n      setText((prev) => word.substring(0, prev.length + 1))\n      // Word is completed\n      if (text === word) {\n        // if not loop just return\n        if (!loop) return\n        // else set the speed delay and start over\n        setSpeed(delaySpeed || 1500)\n        isDeleting.current = true\n      }\n    }\n  }, [delaySpeed, deleteSpeed, loop, text, typeSpeed, words])\n\n  useEffect(() => {\n    const timer = setTimeout(() => handleTyping(), speed)\n    return () => clearTimeout(timer)\n  }, [handleTyping, speed])\n\n  return (\n    <React.Fragment>\n      <span>{text}</span>\n      {cursor && <span className='blinking-cursor'>{cursorStyle || '|'}</span>}\n    </React.Fragment>\n  )\n})\n"],"names":["memo","Typewriter","loop","typeSpeed","deleteSpeed","delaySpeed","words","cursor","cursorStyle","useState","speed","setSpeed","text","setText","isDeleting","useRef","counter","handleTyping","useCallback","index","current","length","word","prev","substring","useEffect","timer","setTimeout","clearTimeout"],"mappings":";;AAEA,YAAeA,IAAI,CAAC,SAASC,UAAT,OAQjB;AAAA,MAPDC,IAOC,QAPDA,IAOC;AAAA,MANDC,SAMC,QANDA,SAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,WACC,QADDA,WACC;;AAAA,kBAEyBC,QAAQ,CAAC,GAAD,CAFjC;AAAA,MAEMC,KAFN;AAAA,MAEaC,QAFb;;AAAA,mBAGuBF,QAAQ,CAAC,EAAD,CAH/B;AAAA,MAGMG,IAHN;AAAA,MAGYC,OAHZ;;AAKD,MAAMC,UAAU,GAAGC,MAAM,CAAC,KAAD,CAAzB;AACA,MAAMC,OAAO,GAAGD,MAAM,CAAC,CAAD,CAAtB;AAEA,MAAME,YAAY,GAAGC,WAAW,CAAC,YAAM;AACrC,QAAMC,KAAK,GAAGjB,IAAI,GAAGc,OAAO,CAACI,OAAR,GAAkBd,KAAK,CAACe,MAA3B,GAAoCL,OAAO,CAACI,OAA9D;AACA,QAAME,IAAI,GAAGhB,KAAK,CAACa,KAAD,CAAlB;AACAR,IAAAA,QAAQ,CAACR,SAAS,IAAI,GAAd,CAAR;;AAEA,QAAIW,UAAU,CAACM,OAAf,EAAwB;AAEtBT,MAAAA,QAAQ,CAACP,WAAW,IAAI,EAAhB,CAAR;AAEAS,MAAAA,OAAO,CAAC,UAACU,IAAD;AAAA,eAAUD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkBD,IAAI,CAACF,MAAL,GAAc,CAAhC,CAAV;AAAA,OAAD,CAAP;;AAEA,UAAIT,IAAI,KAAK,EAAb,EAAiB;AACfE,QAAAA,UAAU,CAACM,OAAX,GAAqB,KAArB;AACAJ,QAAAA,OAAO,CAACI,OAAR,GAAkBJ,OAAO,CAACI,OAAR,GAAkB,CAApC;AACD;AACF,KAVD,MAUO;AAELP,MAAAA,OAAO,CAAC,UAACU,IAAD;AAAA,eAAUD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkBD,IAAI,CAACF,MAAL,GAAc,CAAhC,CAAV;AAAA,OAAD,CAAP;;AAEA,UAAIT,IAAI,KAAKU,IAAb,EAAmB;AAEjB,YAAI,CAACpB,IAAL,EAAW;AAEXS,QAAAA,QAAQ,CAACN,UAAU,IAAI,IAAf,CAAR;AACAS,QAAAA,UAAU,CAACM,OAAX,GAAqB,IAArB;AACD;AACF;AACF,GA3B+B,EA2B7B,CAACf,UAAD,EAAaD,WAAb,EAA0BF,IAA1B,EAAgCU,IAAhC,EAAsCT,SAAtC,EAAiDG,KAAjD,CA3B6B,CAAhC;AA6BAmB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMC,KAAK,GAAGC,UAAU,CAAC;AAAA,aAAMV,YAAY,EAAlB;AAAA,KAAD,EAAuBP,KAAvB,CAAxB;AACA,WAAO;AAAA,aAAMkB,YAAY,CAACF,KAAD,CAAlB;AAAA,KAAP;AACD,GAHQ,EAGN,CAACT,YAAD,EAAeP,KAAf,CAHM,CAAT;AAKA,sBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,kCAAOE,IAAP,CADF,EAEGL,MAAM,iBAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAmCC,WAAW,IAAI,GAAlD,CAFb,CADF;AAMD,CAxDkB,CAAnB;;;;"}